<?xml version="1.0"?>
<ruleset name="Supercraft">
    <description>Supercraft projects coding standard.</description>
    <arg name="tab-width" value="2"/>

    <!-- Include PSR-1 -->
    <rule ref="PSR1"/>

    <!-- Include PSR-2 -->
    <rule ref="PSR2"/>

    <!-- Other -->
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.ControlStructures.ControlSignature"/>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.Strings.ConcatenationSpacing"/>
    <rule ref="PEAR.Commenting.InlineComment"/>

    <!-- Import Zend coding standard (which in turn imports PEAR) -->
    <rule ref="Zend">

       <!-- but exclude their code analyzer -->
       <exclude name="Zend.Debug.CodeAnalyzer"/>

       <!-- covered by Squiz ControlSignature, which enforces try/catch as well -->
       <exclude name="PEAR.ControlStructures.ControlSignature"/>
       <exclude name="PEAR.Commenting.FunctionComment.SpacingBeforeTags"/>

       <!-- covered by Squiz FunctionDeclarationSniff -->
       <exclude name="Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine"/>
   </rule>

   <rule ref="Generic.Files.LineLength">
      <properties>
       <property name="lineLimit" value="120"/>
       <property name="absoluteLineLimit" value="120"/>
      </properties>
      <severity>0</severity>
   </rule>

   <!-- Don't enforce Zend's private member underscores -->
   <rule ref="Zend.NamingConventions.ValidVariableName.PrivateNoUnderscore">
       <severity>0</severity>
   </rule>

    <rule ref="PSR1.Classes.ClassDeclaration.MissingNamespace">
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>
   <!-- Ignore variables that contains numbers -->
   <rule ref="Zend.NamingConventions.ValidVariableName.ContainsNumbers">
       <severity>0</severity>
   </rule>

   <!-- Disable Zend multiline function calls spacing -->
   <rule ref="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket">
       <severity>0</severity>
   </rule>

   <rule ref="PEAR.Functions.FunctionCallSignature.SpaceAfterCloseBracket">
       <severity>0</severity>
   </rule>

   <rule ref="PEAR.Functions.FunctionCallSignature.CloseBracketLine">
       <severity>0</severity>
   </rule>

    <rule ref="PEAR.Functions.FunctionCallSignature.OpeningIndent">
        <severity>0</severity>
    </rule>

    <rule ref="PEAR.Functions.FunctionCallSignature.Indent">
        <severity>0</severity>
    </rule>

   <rule ref="Supercraft.Commenting.FunctionComment.MissingParamComment">
       <severity>0</severity>
   </rule>

    <rule ref="Supercraft.Files.AlphanumericFilename.Invalid">
        <exclude-pattern>*/translations/*</exclude-pattern>
    </rule>

    <rule ref="PSR1.">
        <severity>0</severity>
    </rule>

   <rule ref="Supercraft.Commenting.FunctionComment.Missing">
       <type>error</type>
   </rule>

   <rule ref="Supercraft.Commenting.ClassComment.Missing">
       <type>error</type>
   </rule>

   <rule ref="Supercraft.Commenting.ClassComment.Blacklisted">
       <type>error</type>
   </rule>

   <rule ref="Supercraft.Commenting.FunctionComment.MissingReturn">
       <type>error</type>
   </rule>

   <rule ref="Supercraft.Commenting.FunctionComment.SpacingBeforeTags">
       <severity>0</severity>
   </rule>

   <rule ref="Supercraft.Commenting.ClassComment.SpacingBeforeTags">
       <message>There should always be a description, followed by a blank line, before the tags of a class comment.</message>
   </rule>
</ruleset>
